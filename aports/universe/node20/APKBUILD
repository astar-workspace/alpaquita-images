# APORTS attributions:
# Contributor: Jose-Luis Rivas <ghostbar@riseup.net> 
# Contributor: Jakub Jirutka <jakub@jirutka.cz> 
# Contributor: Dave Esaias <dave@containership.io> 
# Contributor: Tadahisa Kamijo <kamijin@live.jp> 
# Contributor: Eivind Uggedal <eu@eju.no> 
# Original Maintainer: Jakub Jirutka <jakub@jirutka.cz>

# astarivi: This is a modified nodejs APKBUILD file from Alpine
# aports, aimed at providing a production-ready distribution of
# the node binary, while keeping as much dynamic linking as
# possible.

pkgname=node20
pkgver=20.18.0
pkgrel=0
pkgdesc="JavaScript runtime built on V8 engine - LTS version"
url="https://nodejs.org/"
arch="x86_64 aarch64"
maintainer="astarivi <astarivi@aol.com>"
license="MIT"
depends="ca-certificates"
makedepends="
	ada-dev
	brotli-dev
	c-ares-dev
	icu-dev
	linux-headers
	nghttp2-dev
	py3-jinja2
	python3
	samurai
	zlib-dev
	"
subpackages="
	$pkgname-dev
	$pkgname-doc
	"
provider_priority=100
provides="nodejs"
replaces="nodejs nodejs-current nodejs-lts"
source="https://nodejs.org/dist/v$pkgver/node-v$pkgver.tar.gz
	disable-running-gyp-on-shared-deps.patch
	system-ada.patch
	disable-sea-testing.patch
	disable-privileged-port-testing.patch
	"
builddir="$srcdir/node-v$pkgver"

build() {
	# Add defines recommended in libuv readme.
	local common_flags="-D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	export CFLAGS="${CFLAGS/-Os} $common_flags"
	export CXXFLAGS="${CXXFLAGS/-Os} $common_flags"
	export CPPFLAGS="${CPPFLAGS/-Os} $common_flags"

	# NOTE: We use bundled libuv because they don't care much about backward
	# compatibility and it has happened several times in past that we
	# couldn't upgrade nodejs package in stable branches to fix CVEs due to
	# libuv incompatibility.
	#
	# NOTE: We don't package the bundled npm - it's a separate project with
	# its own release cycle and version numbering, so it's better to keep
	# it in a standalone aport.
	#
	# astarivi: We use bundled openssl as using anything newer will cause 
	# the following tests to fail:
	#
	# test/parallel/test-tls-cert-regression.js
	# test/parallel/test-tls-client-getephemeralkeyinfo.js
	# test/parallel/test-tls-getcipher.js
	# test/parallel/test-tls-set-ciphers.js
	# test/addons/openssl-providers/test-legacy-provider-config.js
	# test/addons/openssl-providers/test-legacy-provider-option.js
	# test/sequential/test-tls-session-timeout.js
	# test/parallel/test-tls-junk-closes-server.js
	#
	# Related issue: https://github.com/nodejs/node/issues/53382
	#
	# astarivi: We also use "full-icu" for intl, as using "system-icu" will
	# cause the following test to fail, due to unsupported encodings:
	#
	# test/wpt/test-encoding.js
	#
	# This seems to be an issue ack by upstream node, but they do not 
	# plan on supporting "system-icu" builds. Building with "full-icu" also
	# matches the default behaviour of node, which saves a few headaches
	# to build consumers.
	#
	# astarivi: TODO: Shared base64 lib patches were removed, as they caused
	# the linking stage to fail (and were broken due to changes in node.gyp). 
	# It may be better to wait for upstream Alpine aports to fix base64 lib 
	# support, rather than trying to fix it here.
	#
	# astarivi: Disabled the following tests, as they always fail due to seagfault:
	#
	# test/sequential/test-single-executable-application.js
	# test/sequential/test-single-executable-application-assets.js
	# test/sequential/test-single-executable-application-assets-raw.js
	# test/sequential/test-single-executable-application-disable-experimental-sea-warning.js
	# test/sequential/test-single-executable-application-empty.js
	# test/sequential/test-single-executable-application-snapshot.js
	# test/sequential/test-single-executable-application-snapshot-and-code-cache.js
	# test/sequential/test-single-executable-application-use-code-cache.js
	#
	# These tests also fail on the official node binary.
	# TODO: Enable once SEA is stable enough (probably is in 22). This seems to be an issue
	# that is already fixed in current branch.
	#
	# astarivi: Disabled the following tests, as they fail due to the build system 
	# (buildx container):
	#
	# test-cluster-shared-handle-bind-privileged-port
	#
	# Not testing for this case is likely not an issue, as privileged ports are handled
	# by host permissions anyway, and other tests already do port testing.

	python3 configure.py \
		--prefix=/usr \
		--ninja \
		--enable-lto \
		--shared-brotli \
		--shared-zlib \
		--shared-cares \
		--shared-nghttp2 \
		--openssl-use-def-ca-store \
		--with-icu-default-data-dir=$(icu-config --icudatadir) \
		--with-intl=full-icu \
		--without-npm

	make BUILDTYPE=Release
}

check() {
	make NODE="$builddir/out/Release/node" test-only
}

package() {
	make DESTDIR="$pkgdir" install

	# Remove unused openssl headers. Issue: https://github.com/nodejs/node/issues/46451
	# If more architectures are needed, the value of the "linux" prefix should change dynamically (ex: linux64)
	find "$pkgdir/usr/include/node/openssl/archs" -mindepth 1 -maxdepth 1 ! -name "linux-$CARCH" -exec rm -rf -- {} \;
}

sha512sums="
961d1823e1c66d12060c12984c7a85e5aeb69c24197c66dcdf3619f6d06142da0f0f2d2200679ad5a02398ad8b420ae8bac2eb5e68aa1c5a86988cd8e2fb7cc3  node-v20.18.0.tar.gz
8c264eefc0bfa9dd57656f9f515e940d5c21b8d836dc549031ee559ba909643f4f2495b8b392ee9976c5eed7c3b4a09db876bbe0f7fcd5b2bf63fafca37bffc2  disable-running-gyp-on-shared-deps.patch
29784f212c2a60e79c0971a40ac2517576b761bbbef09e524c172c4f9d887e9451e030bcb181ac367fa4fe10083fde5aa6e58f1f01512e02455147ae91b1bec8  system-ada.patch
ec58964e95fcf033300d4abb546138da8b9d571244788bb8f345ab9ab06c829a06973d37678548d4a83bee0ebfe8c2b86b9623a21ed819392e43c6956b6e3d19  disable-sea-testing.patch
1efa3268445476049754086869b8514a12749b450db96e4e8a06123952c12a4dcc771ae1657189e125cd84e2fec6598d5df763215a3acbf99d58ba928b4a6715  disable-privileged-port-testing.patch
"